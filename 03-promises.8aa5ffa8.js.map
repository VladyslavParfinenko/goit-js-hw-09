{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMQ,EAAOC,SAASC,cAAc,SACpCC,QAAQC,IAAIJ,GAEZA,EAAKK,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACNJ,QAAQC,IAAIE,EAAME,QAElB,MAAMC,EAAaC,SAAST,SAASC,cAAc,kBAAkBS,OAC/DC,EAAYF,SAAST,SAASC,cAAc,iBAAiBS,OAC7DE,EAASH,SAAST,SAASC,cAAc,mBAAmBS,OAElE,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAChC,MAAMC,EAAc,IAAND,EAAUL,EAAaA,EAAcK,EAAIF,EAEvDb,YAAW,KACTT,EAAcwB,EAAGC,GACdC,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBW,QAAQC,IAAI,uBAAqBb,QAAiBC,OAClDyB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAEzE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBW,QAAQC,IAAI,sBAAoBb,QAAiBC,OACjDyB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,MAAU,GACrE,GACHuB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nconsole.log(form);\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  console.log(event.target);\n  \n  const firstDelay = parseInt(document.querySelector('[name=\"delay\"]').value);\n  const delayStep = parseInt(document.querySelector('[name=\"step\"]').value);\n  const amount = parseInt(document.querySelector('[name=\"amount\"]').value);\n\n  for (let i = 1; i <= amount; i++) {\n    const delay = i === 1 ? firstDelay : firstDelay + (i * delayStep);\n    \n    setTimeout(() => {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, delay);\n  }\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$form","document","querySelector","console","log","addEventListener","event","preventDefault","target","firstDelay","parseInt","value","delayStep","amount","i","delay1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.8aa5ffa8.js.map"}
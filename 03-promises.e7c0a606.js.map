{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAeA,IAAMC,EAAOC,SAASC,cAAc,SACpCC,QAAQC,IAAIJ,GAEZA,EAAKK,iBAAiB,UAEtB,SAAkBC,G,kBASd,IAAMC,EAAc,IAANC,EAAUC,EAAaA,EAAcD,EAAIE,EAEvDC,YAAW,WA7Bf,IAAuBC,EAAUC,EACzBC,GADeF,EA8BHJ,EA9BaK,EA8BVN,EA7BfO,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BR,YAAW,WACLG,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAsBEO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBV,QAAQC,IAAI,uBAAwCkB,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAC1DU,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAwCH,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,IAEvEa,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBV,QAAQC,IAAI,sBAAuCkB,OAAfV,EAAS,QAAYU,OAANT,EAAM,OACzDU,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAqCL,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,MAEtEN,E,EApBLD,EAAMsB,iBACNzB,QAAQC,IAAIE,EAAMuB,QAMlB,IAJA,IAAMpB,EAAaqB,SAAS7B,SAASC,cAAc,kBAAkB6B,OAC/DrB,EAAYoB,SAAS7B,SAASC,cAAc,iBAAiB6B,OAC7DC,EAASF,SAAS7B,SAASC,cAAc,mBAAmB6B,OAEzDE,EAAI,EAAGA,GAAKD,EAAQC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nconsole.log(form);\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  console.log(event.target);\n  \n  const firstDelay = parseInt(document.querySelector('[name=\"delay\"]').value);\n  const delayStep = parseInt(document.querySelector('[name=\"step\"]').value);\n  const amount = parseInt(document.querySelector('[name=\"amount\"]').value);\n\n  for (let i = 1; i <= amount; i++) {\n    const delay = i === 1 ? firstDelay : firstDelay + (i * delayStep);\n    \n    setTimeout(() => {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, delay);\n  }\n}\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","console","log","addEventListener","event","delay1","i","firstDelay","delayStep","setTimeout","position","delay","shouldResolve","Math","random","Promise","resolve","reject","then","param","concat","$parcel$interopDefault","Notify","success","catch","failure","preventDefault","target","parseInt","value","amount","i1","_loop"],"version":3,"file":"03-promises.e7c0a606.js.map"}